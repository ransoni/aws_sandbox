#
# Based on
# https://github.com/terraform-providers/terraform-provider-aws/blob/master/examples/eks-getting-started/eks-cluster.tf
# and
# https://learn.hashicorp.com/terraform/aws/eks-intro
#
# EKS Cluster Resources
#  * IAM Role to allow EKS service to manage other AWS services
#  * EC2 Security Group to allow networking traffic with EKS cluster
#  * EKS Cluster
#

resource "aws_iam_role" "eks-jenkins-cluster" {
  name = "terraform-eks-jenkins-cluster-user"

  assume_role_policy = <<POLICY
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Service": "eks.amazonaws.com"
      },
      "Action": "sts:AssumeRole"
    }
  ]
}
POLICY
}

resource "aws_iam_role_policy_attachment" "eks-jenkins-cluster-AmazonEKSClusterPolicy" {
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
  role       = "${aws_iam_role.eks-jenkins-cluster.name}"
}

resource "aws_iam_role_policy_attachment" "eks-jenkins-cluster-AmazonEKSServicePolicy" {
  policy_arn = "arn:aws:iam::aws:policy/AmazonEKSServicePolicy"
  role       = "${aws_iam_role.eks-jenkins-cluster.name}"
}

resource "aws_iam_role_policy" "eks-jenkins-cluster-route53" {
  name = "eks-jenkins-cluster-route53"
  role = "${aws_iam_role.eks-jenkins-cluster.id}"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "route53:AssociateVPCWithHostedZone"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}
EOF
}

# Adding missing IAM policies for the cluster to be able to create ELB for ingress-nginx
resource "aws_iam_role_policy" "eks-jenkins-cluster-ec2-describe" {
  name = "eks-jenkins-cluster-missing-ec2-describes"
  role = "${aws_iam_role.eks-jenkins-cluster.id}"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeInternetGateways"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}
EOF
}

resource "aws_security_group" "eks-jenkins-cluster" {
  name        = "terraform-eks-jenkins-cluster"
  description = "Cluster communication with worker nodes"
  vpc_id      = "${aws_vpc.eks-jenkins-vpc.id}"
  # vpc_id      = "${aws_vpc.eks-vpn.id}"

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    # cidr_blocks = ["${aws_vpc.eks-vpn.cidr_block}"] # May not work since EKS cluster has public IP address.
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "terraform-eks-jenkins"
  }
}

resource "aws_security_group_rule" "eks-jenkins-cluster-ingress" {
  cidr_blocks       = ["82.181.216.186/32"]
  # cidr_blocks       = ["${aws_eip.gatekeeper_elastic_ip.public_ip}/32"]
  description       = "Allow communication with the cluster API Server from Office network"
  from_port         = 443
  protocol          = "tcp"
  security_group_id = "${aws_security_group.eks-jenkins-cluster.id}"
  to_port           = 443
  type              = "ingress"
}

resource "aws_security_group_rule" "eks-jenkins-cluster-ingress-node-https" {
  description              = "Allow pods to communicate with the cluster API Server"
  from_port                = 443
  protocol                 = "tcp"
  security_group_id        = "${aws_security_group.eks-jenkins-cluster.id}"
  source_security_group_id = "${aws_security_group.eks-jenkins-node.id}"
  to_port                  = 443
  type                     = "ingress"
}

# Kubernetes master cluster (not to be confused with worker nodes)
resource "aws_eks_cluster" "jenkins-cluster" {
  name     = "${var.eks-jenkins-cluster-name}"
  role_arn = "${aws_iam_role.eks-jenkins-cluster.arn}"

  enabled_cluster_log_types   = ["api", "controllerManager", "scheduler"]

  vpc_config {
    security_group_ids = ["${aws_security_group.eks-jenkins-cluster.id}"]
    subnet_ids         = ["${aws_subnet.eks-jenkins-subnet.*.id}"]
    endpoint_private_access = "true"
  }

  depends_on = [
    "aws_iam_role_policy_attachment.eks-jenkins-cluster-AmazonEKSClusterPolicy",
    "aws_iam_role_policy_attachment.eks-jenkins-cluster-AmazonEKSServicePolicy",
    "aws_cloudwatch_log_group.eks-jenkins-cluster-log-group",
  ]
}

# EKS Cluster Logging
resource "aws_cloudwatch_log_group" "eks-jenkins-cluster-log-group" {
  name              = "/aws/eks/${var.eks-jenkins-cluster-name}/cluster"
  retention_in_days = 7
}